import 'dart:io';
import 'dart:typed_data';
import 'dart:ui' as ui;
import 'package:festival_post_app/routes/routes.dart';
import 'package:festival_post_app/utils/festival_utils.dart';
import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:path_provider/path_provider.dart';

class DetailPage extends StatefulWidget {
  const DetailPage({super.key});

  @override
  State<DetailPage> createState() => _DetailPageState();
}

class _DetailPageState extends State<DetailPage> {
  List<GlobalKey> allKeys = [];

  Future<File> getFile({required GlobalKey key}) async {
    RenderRepaintBoundary boundary =
        key.currentContext!.findRenderObject() as RenderRepaintBoundary;
    ui.Image image = await boundary.toImage(
      pixelRatio: 1,
    );
    ByteData? bytes = await image.toByteData(
      format: ui.ImageByteFormat.png,
    );
    Uint8List uInt8list = bytes!.buffer.asUint8List();

    Directory directory = await getTemporaryDirectory();
    File file = await File(
            "${directory.path}/QA-${DateTime.now().millisecondsSinceEpoch}.png")
        .create();
    file.writeAsBytesSync(uInt8list);

    return file;
  }

  Widget saveChild = const Icon(Icons.save_alt);

  int selectedIndex = 0;

  @override
  Widget build(BuildContext context) {
    Map<String, dynamic> festivals =
        (ModalRoute.of(context)?.settings.arguments ?? allFestivals[0])
            as Map<String, dynamic>;

    allKeys = List.generate(
      festivals['images'].length,
      (index) => GlobalKey(),
    );

    Size size = MediaQuery.sizeOf(context);

    return Scaffold(
      backgroundColor: Colors.black12,
      body: Stack(
        children: [
          Container(
            height: size.height,
            width: size.width,
            padding: const EdgeInsets.all(16),
            decoration: const BoxDecoration(
              image: DecorationImage(
                image: NetworkImage(
                  "https://i.pinimg.com/236x/4e/4a/f7/4e4af7e0dcff47c1f8d8725bb9b89fa2.jpg",
                ),
                fit: BoxFit.cover,
              ),
            ),
          ),
          Column(
            children: [
              SizedBox(
                height: size.height * 0.05,
              ),
              Text(
                " Festival Detail's ",
                style: GoogleFonts.aclonica(
                  color: Colors.black,
                  fontSize: 25,
                ),
              ),
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                child: Row(
                  children: [
                    const SizedBox(
                      height: 200,
                    ),
                    ...List.generate(
                      festivals['images'].length,
                      (index) => GestureDetector(
                        onTap: () {
                          setState(() {
                            selectedIndex = index;
                          });
                          Navigator.pushNamed(context, MyRoutes.editPage,
                              arguments: festivals);
                        },
                        child: RepaintBoundary(
                          // key: allKeys[index],
                          child: Container(
                            height: size.height * 0.5,
                            width: size.width * 0.92,
                            decoration: BoxDecoration(
                              color: Colors.grey,
                              borderRadius: BorderRadius.circular(15),
                              border: selectedIndex == index
                                  ? Border.all(
                                      width: 3, style: BorderStyle.solid)
                                  : null,
                              image: DecorationImage(
                                image: NetworkImage(festivals['images'][index]),
                                fit: BoxFit.cover,
                              ),
                            ),
                            margin: const EdgeInsets.all(5),
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
              Container(
                height: size.height * 0.33,
                width: size.width,
                decoration: const BoxDecoration(
                  borderRadius: BorderRadius.vertical(
                    top: Radius.circular(40),
                  ),
                ),
                padding: const EdgeInsets.all(20),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      "Name : ${festivals['name']}",
                      style: GoogleFonts.jockeyOne(
                        color: Colors.black,
                        fontSize: 27,
                      ),
                    ),
                    SizedBox(
                      height: size.height * 0.005,
                    ),
                    Text(
                      "Date : ${festivals['date']}",
                      style: GoogleFonts.abel(
                        color: Colors.black,
                        fontSize: 22,
                      ),
                    ),
                    Text(
                      "Location : ${festivals["location"]}",
                      style: GoogleFonts.abel(
                        color: Colors.black,
                        fontSize: 23,
                      ),
                    ),
                    Text(
                      "Description : ${festivals["description"]}",
                      style: GoogleFonts.abel(
                        color: Colors.black,
                        fontSize: 24,
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ],
      ),
      // floatingActionButton: FloatingActionButton(
      //   onPressed: () async {
      //     saveChild = const CircularProgressIndicator();
      //     setState(() {});
      //     File file = await getFile(key: allKeys[selectedIndex]);
      //     ImageGallerySaver.saveFile(file.path).then((value) {
      //       saveChild = const Icon(Icons.done);
      //       setState(() {});
      //     });
      //   },
      //   child: saveChild,
      // ),
    );
  }
}
